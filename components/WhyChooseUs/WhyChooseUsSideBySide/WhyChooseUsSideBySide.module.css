@media only screen and (min-width: 0rem) {
  .csContainer {
    max-width: 80rem;
    /* 48px - 64px */
    gap: clamp(3rem, 6vw, 4rem);
  }
  .csContent {
    max-width: 33.875rem;
  }
  .csTitle {
    font-size: var(--headerFontSize);
    line-height: 1.2em;
    max-width: 43.75rem;
    color: var(--headerColor);
  }
  .csText {
    font-size: var(--bodyFontSize);
    line-height: 1.5em;
    max-width: 40.625rem;
    color: var(--bodyTextColor);
  }

  .csText {
    /* Override. csTitle and first csText should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
    margin-bottom: 1rem;
  }
  .csText:last-of-type {
    margin-bottom: 2rem;
  }
  .csUl {
    width: 100%;
    margin: 0 0 2rem 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 1.5rem;
  }
  .csLi {
    list-style: none;
    margin: 0;
    padding: 0;
  }
  .csH3 {
    font-size: 1.25rem;
    line-height: 1.2em;
    font-weight: 700;
    margin: 0 0 0.5rem 0;
    color: var(--headerColor);
    display: flex;
    justify-content: flex-start;
    align-items: flex-start;
    gap: 0.75rem;
  }
  .csIcon {
    width: 1.0625rem;
    height: auto;
    margin-top: 0.25rem;
  }
  .csItemText {
    font-size: 0.875rem;
    line-height: 1.5em;
    color: var(--bodyTextColor);
  }
  .csImageGroup {
    /* everything inside the image group is in ems so the font size will scale them down.  Font size minimum is tied to view width size, and grows until it reaches 75% of the value on em */
    font-size: min(2.3vw, .75em);
    width: 39.5em;
    height: 51.25em;
    position: relative;
    z-index: 1;
    /* flips it horizontally */
    transform: scaleX(-1);
  }
  .csPicture {
    width: 19.125em;
    height: 22.5em;
    overflow: hidden;
    display: block;
    position: absolute;
  }
  .csPicture img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: absolute;
    top: 0;
    left: 0;
    /* so the images are the original orientation, undoing the flip the csImageGroup is doing */
    transform: scaleX(-1);
  }
  .csPicture1 {
    top: 5em;
    left: 0;
  }
  .csPicture2 {
    top: 0;
    right: 0;
  }
  .csPicture3 {
    bottom: 0;
    left: 0;
  }
  .csPicture4 {
    bottom: 5em;
    right: 0;
  }
  .csGraphic {
    display: none;
  }
}
/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
  .csContainer {
    flex-direction: row;
    justify-content: space-between;
  }
  .csImageGroup {
    font-size: min(1.2vw, 1em);
    flex: none;
    /* sends it to the right in the 2nd position */
    order: 2;
  }
  .csGraphic {
    width: 61.4375em;
    height: auto;
    display: block;
    position: absolute;
    bottom: 10.3125em;
    right: -2em;
    z-index: -1;
  }
}
